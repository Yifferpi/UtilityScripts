#! /usr/bin/env python3

import sys
import os
import codecs
import datetime
import argparse

#Todo: decide filetype based on header rather than suffix
#Todo: error handling in case pandoc not installed
#=======================================================

#Parsing input
parser = argparse.ArgumentParser()
parser.add_argument("input", help="File to be processed", nargs='+')
parser.add_argument("--nodate", action='store_false', dest='setdate', help="Omit inserting current date")
parser.add_argument("-o", metavar='output', dest='output',  help="Set the name of the output file, doesn't work with multiple files, if not specified, imagename will be used")
parser.add_argument("-t", metavar='title', dest='title', help="Set a title inside the document")
args = parser.parse_args()

#==========================================================

def writeMarkdown(imagename, tmpname):

    #Check for errors
    if not os.path.isfile(imagename):
        print("File " + imagename + " not found!")
        return False
    if not imagename.endswith("jpg"):
        print("File must be a .jgp!")
        return False

    #Create temporary file
    with codecs.open(tmpname, 'w', 'utf-8') as f:
        #Write file according to args
        if args.title is not None: 
            f.write("#" + args.title + "\n")
        if args.setdate:
            f.write("Datum: " + str(datetime.date.today()) + "\n\n")
        f.write("![Quittung](" + imagename + "){ width=60% }\n")
        f.close()
    return True 
    
#==================================================

#Converts tmpname to pdf named pdfout_name, removes file tmpname 

def convertToPdf(pdfout_name, tmpname):
    #Create pandoc command and execute it
    pandoc_cmd = "pandoc -s -f markdown+link_attributes -o " + pdfout_name
    pandoc_cmd = pandoc_cmd + " " + tmpname
    os.system(pandoc_cmd)
    os.remove(tmpname)

#===================================================
#Main
def main():
    for i in args.input:
        print("Converting " + i)
        if writeMarkdown(i, "tmp.md"):
            convertToPdf(i.split('.')[0] + ".pdf", "tmp.md")
            print("Success")
        else:
            print("Failed")

if __name__ == "__main__":
    main()
